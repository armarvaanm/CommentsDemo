@model CommentsDemo.Models.CommentsViewModal
<div class="form-horizontal">
    <hr />
    </div>
    <div class="row">
    </div>


<div class="container">
    <div class="row">
        <div class="col-md-7">
            @using (Html.BeginForm("Create", "Comments", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Add Comments</h4>
                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-5">

            <div class="row">

                <div class="col-md-offset-2 col-md-10">

                    <div id="dvSearchComments">
                        @using (Ajax.BeginForm("SearchByComment", "Comments", new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced
                UpdateTargetId = "dvCommentsList"
            }))
            {
                            <table>
                                <tr>
                                    <td>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.SearchString, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="input-group-btn">
                                            <button id="btnSearch" class="btn btn-default" type="submit">Search</button>
                                        </div>
                                    </td>
     
                                </tr>
                                <tr>
                                    <td>
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default" onClick="SampleException()" title="Exception Sample">Try Exception</button>
</div></td>
                                </tr>
                            </table>



                        }
                    </div>

                </div>

            </div>
        </div>
        
    </div>
</div>

    
<hr />
    <div id='myModal' class='modal fade in'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>

    @*<div class="row" style="overflow-y: scroll;  height: 400px;">*@

<div >
    <div class="col-md-offset-2 col-md-10" id="replacetargetid">

        @Html.Partial("_List", @Model.List);
    </div>
</div>

    <script type="text/javascript">

        function DeleteData(Id) {
            debugger;
            $.ajax({
                url: '@Url.Action("DeleteConfirmedAjax", "Comments")',
                type: 'POST',
                data: { id :Id},
                success: function (result) {
                    debugger;
                    if (result.success) {
                        debugger;
                        //$('#myModal').modal('hide');
                        $('#replacetargetid').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    }
                }
            });
            return false;
        }

        function SampleException() {
            debugger;
            $.ajax({
                url: '@Url.Action("SampleException", "Comments")',
                type: 'GET',
                error: function (result) {
                    debugger;
                    if (result.success) {
                        alert("Exception Logged :-)");
                    }
                }
            });
            return false;
        }

        $(function () {
            $.ajaxSetup({ cache: false });

            $("a[data-modal]").on("click", function (e) {
                // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
                //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

                $('#myModalContent').load(this.href, function () {
                    $('#myModal').modal({
                        /*backdrop: 'static',*/
                        keyboard: true
                    }, 'show');
                    bindForm(this);
                });
                return false;
            });
        });

        function bindForm(dialog) {
            $('form', dialog).submit(function () {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('#myModal').modal('hide');
                            $('#replacetargetid').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                        } else {
                            $('#myModalContent').html(result);
                            bindForm(dialog);
                        }
                    }
                });
                return false;
            });
        }

    </script>
